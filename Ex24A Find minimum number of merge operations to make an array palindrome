package array;

/**
 * @author Sandeep Srivastava
 * Problem: Find minimum number of merge operations to make an array palindrome
 * Given: Positive Integeres
 * 
 * (Q) What is pelindrome array?
 * (A) Pelindrome array is the array in which, when we traverse the array from LEFT to RIGHT and from RIGHT to LEFT
 *     then the sequence remains the same. 
 *     
 *     Ex- {1, 2, 1}
 *     
 * Allowed Operations: Only allowed operation on array is merge. Merging two adjacent elements means replcing them 
 *                     with their sum
 *                    
 * Task: is not to make a Pelindrome array task is to find the minimum number of steps to make the array Pelindrome.
 *     
 *     
 * Note: Single element array is always pelindrone similar to single character string.
 * 
 * How? To make an array pelindrome we can simply apply merging operation n-1 times where n is the size of array. But n-1
 *      is maximum number of merging operations.
 *      We have to find minimum number of merging operations
 *      
 *   Ex - (1) {15, 4, 15}
 *          already Pelindrome, No need any merging operations
 *        (2) {1, 4, 5, 1}
 *             {1, 9, 1}
 *          output = 1
 *        (3) {11, 14, 15, 99}
 *          output = 3
 *          We need to merge all elements to make a pelindrome
 *          
 * Time Complexity: O(N)
 * Auxiliary Space: O(1)   
 */
public class Ex24A {
	
	public static void main(String[] args) {
//		int arr[] = new int[] {11, 14, 15, 99};
		int arr[] ={15, 4, 15};
//		int arr[] = new int[] {1, 4, 5, 9, 1};
		int minimumNumberOfMergingOperation= findMinOps(arr, arr.length);
		System.out.println("The Minimum Number of Merging Operations: "+minimumNumberOfMergingOperation);
	}

	private static int findMinOps(int[] a, int n) {	
		//ans to count minimum number of merging operations
		int ans = 0;
		
		for(int i=0, j = n-1; i<=j;) {
			
			if(a[i] == a[j]) {
				i++;
				j--;
			}else if(a[i] > a[j]){
				j--;
				a[j] = a[j] + a[j+1]; // one merging operation so
				ans++; //incremented ans(variable to count min number of merging operations)
			}else {
				i++;
				a[i] = a[i] + a[i-1]; // one merging operation so
				ans++; //incremented ans(variable to count min number of merging operations)
			}
		}	
		return ans;
	}
}
