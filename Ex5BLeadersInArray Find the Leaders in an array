package array;

/**
 * 
 * @author Sandeep Srivastava
 * Program: Find the Leaders in an array (Scan From the Right)
 *  
 *  Time Complexity: O(N)
 *  Auxiliary Space: O(1)
 *  
 * 
 *
 */
public class Ex5BLeadersInArray {
	
	public static void main(String[] args) {
//		int intArr[] = {16, 17, 4, 3, 5, 2};
		int intArr[] = {16, 17, 4, 18, 5, 2, 6};
		Ex5BLeadersInArray ex5bLeadersInArray = new Ex5BLeadersInArray();
		ex5bLeadersInArray.findLeaders(intArr, intArr.length);
	}

	//Method [1] to find the leaders in given array
//	private void findLeaders(int[] a, int n) {
//		
//		System.out.print(a[n-1]+" ");
//		int temp=n-1;
//		
//		for(int i=n-2; i>=0;i--) {
//			if(a[i] > a[i+1]) {
//				if(a[i] > a[temp]) {
//					System.out.print(a[i]+ " ");
//				}
//				temp=i;
//			}
//		}
//	}
	
  //Method[2]
	private void findLeaders(int[] a, int n) {

		int max_from_right = a[n - 1];

		System.out.print(max_from_right + " ");

		for (int i = n - 2; i >= 0; i--) {
			if (a[i] > max_from_right) {
				max_from_right = a[i];
				System.out.print(a[i] + " ");
			}
		}
	}
}
