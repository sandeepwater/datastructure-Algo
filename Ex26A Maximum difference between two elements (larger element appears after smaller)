package array;

/**
 * @author Sandeep Srivastava
 * Problem: Maximum difference between two elements (larger element appears after smaller)
 *  
 *  Points: (1) Maximum difference between any two elements such that LARGER ELEMENT appears after SMALLER ELEMENTS. 
 * 
 *  Ex- Array: (1) {2, 3, 10, 6, 4, 8, 1} then returned value should be 8(Difference between 10 and 2)
 *             (2) {7, 9, 5, 6, 3, 2} then returned value should be 2(Difference between 9 and 7)
 *           
 *  Time Complexity: O(N*N)
 *  Auxiliary Space: O(1)
 */
public class Ex26A {

	public static void main(String[] args) {
	
		int arr[] = {2, 3, 10, 6, 4, 8, 1};
		int maxDiff=findMaxDiff(arr, arr.length);
		System.out.println("Max Diff between any two Number: "+maxDiff);
	}

	private static int findMaxDiff(int[] a, int n) {    
		int diff = a[1] - a[0];
		
		for(int i=0; i<n ;i++) {
			for(int j=i+1;j<n;j++) {
				if(a[j] - a[i]>diff)
					diff = a[j]-a[i];
			}
		}
		return diff;
	}
}
